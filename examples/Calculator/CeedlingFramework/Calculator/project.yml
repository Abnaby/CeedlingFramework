
# Notes:
# Sample project C code is not presently written to produce a release artifact.
# As such, release build options are disabled.
# This sample, therefore, only demonstrates running a collection of unit tests.

:project:
  :use_exceptions: false
  :use_test_preprocessor: true
  :use_auxiliary_dependencies: true
  :build_root: build
#  :release_build: TRUE
  :test_file_prefix: test_
  :which_ceedling: gem
  :ceedling_version: 0.31.1
  :default_tasks:
  - test:all

#:test_build:
#  :use_assembly: TRUE

#:release_build:
#  :output: MyApp.out
#  :use_assembly: FALSE

:environment:

:extension:
  :executable: .out

:paths:
  :test:
  - +:test/**
  - -:test/support
  - G:/COURSES/UnitTest/Ceedling/0.Repo/examples/Calculator/Calculator_proj/div/unit-test/
  - G:/COURSES/UnitTest/Ceedling/0.Repo/examples/Calculator/Calculator_proj/mul/unit-test/
  - G:/COURSES/UnitTest/Ceedling/0.Repo/examples/Calculator/Calculator_proj/sub/unit_test/
  - G:/COURSES/UnitTest/Ceedling/0.Repo/examples/Calculator/Calculator_proj/Sum/unit_test/
  :source:
  - src/**
  - G:/COURSES/UnitTest/Ceedling/0.Repo/examples/Calculator/Calculator_proj/div/
  - G:/COURSES/UnitTest/Ceedling/0.Repo/examples/Calculator/Calculator_proj/mul/
  - G:/COURSES/UnitTest/Ceedling/0.Repo/examples/Calculator/Calculator_proj/sub/
  - G:/COURSES/UnitTest/Ceedling/0.Repo/examples/Calculator/Calculator_proj/Sum/
  :support:
  - test/support
  :libraries: []

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :common: &common_defines []
  :test:
  - *common_defines
  - TEST
  :test_preprocess:
  - *common_defines
  - TEST

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: true
  :plugins:
  - :ignore
  - :callback
  :treat_as:
    uint8: HEX8
    uint16: HEX16
    uint32: UINT32
    int8: INT8
    bool: UINT8

# Add -gcov to the plugins list to make sure of the gcov plugin
# You will need to have gcov and gcovr both installed to make it work.
# For more information on these options, see docs in plugins/gcov
:gcov:
  :reports:
  - HtmlDetailed
  :gcovr:
    :html_medium_threshold: 75
    :html_high_threshold: 90

#:tools:
# Ceedling defaults to using gcc for compiling, linking, etc.
# As [:tools] is blank, gcc will be used (so long as it's in your system path)
# See documentation to configure a given toolchain for use

# LIBRARIES
# These libraries are automatically injected into the build process. Those specified as
# common will be used in all types of builds. Otherwise, libraries can be injected in just
# tests or releases. These options are MERGED with the options in supplemental yaml files.
:libraries:
  :placement: :end
  :flag: -l${1}
  :path_flag: -L ${1}
  :system: []    # for example, you might list 'm' to grab the math library
  :test: []
  :release: []

:plugins:
  :load_paths:
  - '#{Ceedling.load_path}'
  :enabled:
  - stdout_pretty_tests_report
  - module_generator
  - gcov
